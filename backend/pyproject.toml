[project]
name = "taram"
version = "0.0.0"
description = "CommunautÃ© de Notre-Dame-du-Laus"
authors = [
    {name = "Marc Tardif", email = "marc@interunion.ca"},
]
readme = "README.rst"
repository = "https://github.com/cr3/taram"
packages = [
    {include = "taram"},
]
requires-python = ">=3.11,<4.0"
dependencies = [
    "aiodocker (>=0.24.0,<1.0.0)",
    "alembic (>=1.14.1,<2.0.0)",
    "attrs (>=25.3.0,<26.0.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "dnspython (>=2.7.0,<3.0.0)",
    "fastapi (>=0.115.6,<1.0.0)",
    "ipaddress (>=1.0.23,<2.0.0)",
    "lookuper (>=0.5.1,<1.0.0)",
    "more-itertools (>=10.5.0,<11.0.0)",
    "mysqlclient (>=2.2.7,<3.0.0)",
    "pip-nftables (>=1.0.2.post1,<2.0.0)",
    "pylibmc (>=1.6.3,<2.0.0)",
    "redis (>=5.2.1,<6.0.0)",
    "requests (>=2.32.3,<3.0.0)",
    "sqlalchemy[asyncio] (>=2.0.37,<3.0.0)",
    "sqlalchemy-utils (>=0.41.2,<1.0.0)",
    "uvicorn (>=0.34.0,<1.0.0)",
    "yarl (>=1.18.3,<2.0.0)",
]

[tool.poetry.group.test.dependencies]
coverage = "^7.2.3"
dnspython = "^2.7.0"
httpx = "^0.28.1"
pyhamcrest = "^2.1.0"
pytest = "^7.2.2"
pytest-unique = "^0.1.4"
pytest-xdocker = "^0.2.4"
redis = "^5.2.1"
responses = "^0.25.6"

[tool.poetry.group.check]
optional = true

[tool.poetry.group.check.dependencies]
ruff = "^0.0.265"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinxcontrib-log-cabinet = "^1.0.1"
sphinx-rtd-theme = "^1.2.0"

[project.entry-points."pytest11"]
taram = "taram.testing.fixtures"
taram-db = "taram.testing.db"
taram-managers = "taram.testing.managers"
taram-services = "taram.testing.services"
taram-queue = "taram.testing.queue"
taram-store = "taram.testing.store"

[project.entry-points."pytest_unique"]
db-model = "taram.testing.unique:unique_db_model"
db-value = "taram.testing.unique:unique_db_value"
domain = "taram.testing.unique:unique_domain"

[project.entry-points."taram_queue"]
memory = "taram.queue:MemoryQueue"
redis = "taram.queue:RedisQueue"

[project.entry-points."taram_store"]
memcached = "taram.store:MemcachedStore"
memory = "taram.store:MemoryStore"
redis = "taram.store:RedisStore"

[project.scripts]
netfilter = "taram.netfilter:main"
taram = "taram.cli:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Create your own exception
    "TRY002",
    # Avoid specifying long messages outside the exception class
    "TRY003",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S106"]

# Pytest options:
#   https://docs.pytest.org/en/6.2.x/reference.html#ini-options-ref
[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-glob=*.rst",
]
testpaths = [
    "taram",
    "docs",
    "tests",
]

# Coverage options:
#   https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.paths]
source = [
    "taram",
    "*/*/site-packages",
]

[tool.coverage.report]
fail_under = 70
show_missing = true

[tool.coverage.run]
branch = true
parallel = true
source = [
    "taram",
]
