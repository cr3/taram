"""Add user acl and user attributes

Revision ID: 359478dc9830
Revises: 9fbec9137efe
Create Date: 2025-02-13 18:33:38.875866

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "359478dc9830"
down_revision: str | None = "9fbec9137efe"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "app_passwd",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("mailbox", sa.String(length=255), nullable=False),
        sa.Column("domain", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("imap_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("smtp_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("dav_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("eas_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("pop3_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("sieve_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("active", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["mailbox"], ["mailbox.username"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("app_passwd_domain", "app_passwd", ["domain"], unique=False)
    op.create_index("app_passwd_mailbox", "app_passwd", ["mailbox"], unique=False)
    op.create_index("app_passwd_password", "app_passwd", ["password"], unique=False)
    op.create_table(
        "user_acl",
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("spam_alias", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("tls_policy", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("spam_score", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("spam_policy", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("delimiter_action", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("syncjobs", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("eas_reset", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("sogo_profile_reset", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("pushover", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("quarantine", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("quarantine_attachments", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("quarantine_notification", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("quarantine_category", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("app_passwds", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("pw_reset", sa.Boolean(), server_default="1", nullable=False),
        sa.ForeignKeyConstraint(
            ["username"],
            ["mailbox.username"],
        ),
        sa.PrimaryKeyConstraint("username"),
    )
    op.create_table(
        "user_attributes",
        sa.Column("username", sa.String(length=255), nullable=False),
        sa.Column("force_pw_update", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("tls_enforce_in", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("tls_enforce_out", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("relayhost", sa.Integer(), server_default="0", nullable=False),
        sa.Column("sogo_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("imap_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("pop3_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("smtp_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("sieve_access", sa.Boolean(), server_default="1", nullable=False),
        sa.Column(
            "quarantine_notification",
            sa.Enum("never", "hourly", "daily", "weekly"),
            server_default="hourly",
            nullable=False,
        ),
        sa.Column(
            "quarantine_category", sa.Enum("add_header", "reject", "all"), server_default="reject", nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["mailbox.username"],
        ),
        sa.PrimaryKeyConstraint("username"),
    )
    op.drop_column("mailbox", "attributes")
    op.drop_column("mailbox", "custom_attributes")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "mailbox",
        sa.Column(
            "custom_attributes",
            mysql.LONGTEXT(charset="utf8mb4", collation="utf8mb4_bin"),
            server_default=sa.text("'{}'"),
            nullable=False,
        ),
    )
    op.add_column(
        "mailbox", sa.Column("attributes", mysql.LONGTEXT(charset="utf8mb4", collation="utf8mb4_bin"), nullable=True)
    )
    op.drop_table("user_attributes")
    op.drop_table("user_acl")
    op.drop_index("app_passwd_password", table_name="app_passwd")
    op.drop_index("app_passwd_mailbox", table_name="app_passwd")
    op.drop_index("app_passwd_domain", table_name="app_passwd")
    op.drop_table("app_passwd")
    # ### end Alembic commands ###
