"""Add missing tables for Dovecot

Revision ID: 4ad58e01b14b
Revises: 1270737d431e
Create Date: 2025-02-24 00:02:27.986549

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4ad58e01b14b"
down_revision: str | None = "1270737d431e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "filterconf",
        sa.Column("prefix", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("object", sa.String(length=255), server_default="", nullable=False),
        sa.Column("option", sa.String(length=50), server_default="", nullable=False),
        sa.Column("value", sa.String(length=100), server_default="", nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("prefix"),
    )
    op.create_index("filterconf_object_key", "filterconf", ["object"], unique=False)
    op.create_table(
        "imapsync",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user2", sa.String(length=255), nullable=False),
        sa.Column("host1", sa.String(length=255), nullable=False),
        sa.Column("authmech1", sa.Enum("PLAIN", "LOGIN", "CRAM-MD5"), server_default="PLAIN", nullable=False),
        sa.Column("regextrans2", sa.String(length=255), server_default="", nullable=False),
        sa.Column("authmd51", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("domain2", sa.String(length=255), server_default="", nullable=False),
        sa.Column("subfolder2", sa.String(length=255), server_default="", nullable=False),
        sa.Column("user1", sa.String(length=255), nullable=False),
        sa.Column("password1", sa.String(length=255), nullable=False),
        sa.Column("exclude", sa.String(length=500), server_default="", nullable=False),
        sa.Column("maxage", sa.Integer(), server_default="0", nullable=False),
        sa.Column("mins_interval", sa.Integer(), server_default="0", nullable=False),
        sa.Column("maxbytespersecond", sa.String(length=5), server_default="0", nullable=False),
        sa.Column("port1", sa.Integer(), nullable=False),
        sa.Column("enc1", sa.Enum("TLS", "SSL", "PLAIN"), server_default="TLS", nullable=False),
        sa.Column("delete2duplicates", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("delete1", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("delete2", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("automap", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("skipcrossduplicates", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("custom_params", sa.String(length=512), server_default="", nullable=False),
        sa.Column("timeout1", sa.Integer(), server_default="600", nullable=False),
        sa.Column("timeout2", sa.Integer(), server_default="600", nullable=False),
        sa.Column("subscribeall", sa.Boolean(), server_default="1", nullable=False),
        sa.Column("dry", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("is_running", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("returned_text", sa.Text(), nullable=True),
        sa.Column("last_run", sa.TIMESTAMP(), nullable=True),
        sa.Column("success", sa.Boolean(), nullable=True),
        sa.Column("exit_status", sa.String(length=50), nullable=True),
        sa.Column("active", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "quarantine",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("qid", sa.String(length=30), nullable=False),
        sa.Column("subject", sa.String(length=500), nullable=True),
        sa.Column("score", sa.Float(), nullable=True),
        sa.Column("ip", sa.String(length=50), nullable=True),
        sa.Column("action", sa.String(length=20), server_default="unknown", nullable=False),
        sa.Column("symbols", sa.JSON(), nullable=False),
        sa.Column("fuzzy_hashes", sa.JSON(), nullable=False),
        sa.Column("sender", sa.String(length=255), server_default="unknown", nullable=False),
        sa.Column("rcpt", sa.String(length=255), nullable=True),
        sa.Column("msg", sa.Text(), nullable=True),
        sa.Column("domain", sa.String(length=255), nullable=True),
        sa.Column("notified", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("user", sa.String(length=255), server_default="unknown", nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "settingsmap",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("desc", sa.String(length=255), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("active", sa.Boolean(), server_default="0", nullable=False),
        sa.Column("created", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("settingsmap")
    op.drop_table("quarantine")
    op.drop_table("imapsync")
    op.drop_index("filterconf_object_key", table_name="filterconf")
    op.drop_table("filterconf")
    # ### end Alembic commands ###
